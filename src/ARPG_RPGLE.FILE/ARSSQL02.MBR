**Free
ctl-opt nomain;
/COPY ARPG_H,ARCALLCTL
//---------------------------------------------------------------*
// extern prototypes
//---------------------------------------------------------------*
/COPY ARPG_H,ARCSQLR

//---------------------------------------------------------------*
// typedefs
//---------------------------------------------------------------*
dcl-ds DsStm_t qualified align template; 
  inPrepStm int(10) inz(-1);
end-ds;

//---------------------------------------------------------------*
// constants
//---------------------------------------------------------------*

//---------------------------------------------------------------*
//  SqlStatement
//---------------------------------------------------------------*
//* 
//*
//* @param pAnSqlStm - Program reference. You should use the field
//*
//* @return ccc
//*
//* @diag messageCode to be defined
//*
//* @Author S.Allbach
//---------------------------------------------------------------*
dcl-proc SqlStatement export;
  dcl-pi *N int(10);
    pAnSqlStm like(sqlstmvar_t) const;
    pInCcsid int(10) const options(*nopass);
  end-pi;

  dcl-s pInPrepStm int(10);
  dcl-s pInResultSet int(10);

  if %parms() >= %parmnum(pInCcsid);
    pInPrepStm = SqlPreparedStatement(pAnSqlStm:pInCcsid);
  else;
    pInPrepStm = SqlPreparedStatement(pAnSqlStm);
  endif;
  
  if pInPrepStm = -1;
     // todo message and move
    return -1;
  endif;

  pInResultSet = SqlPreparedStatementExecuteQuery(pInPrepStm);
  if pInResultSet < 0;
     // todo message and move
     SqlPreparedStatementFree(pInPrepStm);
  endif;  

  return pInResultSet;

end-proc SqlStatement;
//---------------------------------------------------------------*
//  SqlExecute
//---------------------------------------------------------------*
//* 
//*
//* @param pAnSqlStm - Program reference. You should use the field
//*
//* @return ccc
//*
//* @diag messageCode to be defined
//*
//* @Author S.Allbach
//---------------------------------------------------------------*
dcl-proc SqlExecute export;
  dcl-pi *N int(10);
    pAnSqlStm like(sqlstmvar_t) const;
    pInCcsid int(10) const options(*nopass);
  end-pi;

  dcl-s pInPrepStm int(10);
  dcl-s pInSqlCode int(10);

  if %parms() >= %parmnum(pInCcsid);
    pInPrepStm = SqlPreparedStatement(pAnSqlStm:pInCcsid);
  else;
    pInPrepStm = SqlPreparedStatement(pAnSqlStm);
  endif;
  
  if pInPrepStm = -1;
     // todo message and move
    return -1;
  endif;

  pInSqlCode = SqlPreparedStatementExecuteUpdate(pInPrepStm);
  if PInSqlCode < 0;
     // todo message and move
  endif;  

  SqlPreparedStatementFree(pInPrepStm);

  return pInSqlCode;

end-proc SqlExecute;
